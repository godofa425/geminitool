---
description:
# General Guidelines for Gemini CLI

## Tool Selection and Usage Process

When receiving a task, follow this priority order:

1. **First Priority: Check All Available Tools**
   - Review ALL tools listed below to identify if any are suitable for the current task
   - A tool is suitable if its description and capabilities match the task requirements

2. **Tool Installation Check**
   - Before using any identified tool, check if it's already installed on the system
   - Use appropriate commands to verify installation (e.g., `which [tool-name]`, `[tool-name] --version`, etc.)

3. **Install If Needed**
   - If the tool is not installed, follow the installation instructions provided in the tool's section
   - Verify successful installation before proceeding

4. **Execute with the Tool**
   - Use the installed tool to complete the task
   - Follow the tool's best practices and recommended usage patterns

5. **Fallback to Default**
   - Only if NO suitable tools are available from the list below, use Gemini's default processing methods
   - When falling back, briefly explain why none of the available tools were suitable

## Additional Guidelines

- Always prefer using the specialized tools over generic approaches when applicable
- If multiple tools could work, choose the most appropriate one based on the specific task requirements
- Provide clear explanations of your tool selection reasoning


# Tools

## yt-dlp
### Description
yt-dlp is a feature-rich command-line audio/video downloader that serves as a modern fork of youtube-dl with enhanced capabilities and active development. It supports downloading content from YouTube and hundreds of other video/audio platforms including streaming services, social media sites, and educational platforms.

Try using `yt-dlp --help` to get a list of all the options.

### Installation
```bash
# Install via pip (recommended)
python -m pip install --upgrade yt-dlp

# Or install from GitHub for latest features
python -m pip install --upgrade https://github.com/yt-dlp/yt-dlp/archive/master.zip
```

## ffmpeg
### Description
FFmpeg is a comprehensive multimedia framework for converting, streaming, and manipulating audio and video files. It supports virtually all audio/video formats and codecs, making it essential for media processing tasks including format conversion, compression, extraction, streaming, and editing.

Try using `ffmpeg -h` for basic help or `ffmpeg -formats` to see supported formats.

### Installation
```bash
# macOS (via Homebrew)
brew install ffmpeg

# Ubuntu/Debian
sudo apt update && sudo apt install ffmpeg

# Windows (via Chocolatey)
choco install ffmpeg

# Or download from https://ffmpeg.org/download.html
```

## curl
### Description
curl is a command-line tool for transferring data from or to servers using various protocols (HTTP, HTTPS, FTP, etc.). It's essential for API testing, downloading files, web scraping, and automating web interactions. Supports authentication, headers, cookies, and complex request scenarios.

Try using `curl --help` for options or `man curl` for detailed documentation.

### Installation
```bash
# Usually pre-installed on macOS and most Linux distributions
# Check with: curl --version

# Ubuntu/Debian (if not installed)
sudo apt install curl

# Windows (via Chocolatey)
choco install curl

# Or use built-in curl in Windows 10+
```

## jq
### Description
jq is a lightweight and flexible command-line JSON processor. It's perfect for parsing, filtering, transforming, and extracting data from JSON files or API responses. Essential for working with APIs, configuration files, and data processing pipelines.

Try using `jq --help` for options or `jq '.'` to pretty-print JSON.

### Installation
```bash
# macOS (via Homebrew)
brew install jq

# Ubuntu/Debian
sudo apt install jq

# Windows (via Chocolatey)
choco install jq

# Or download from https://stedolan.github.io/jq/download/
```

## git
### Description
Git is the most widely used version control system for tracking changes in source code and collaborating on software projects. Essential for code management, branching, merging, and working with repositories like GitHub, GitLab, and Bitbucket.

Try using `git --help` for basic commands or `git <command> --help` for specific command help.

### Installation
```bash
# macOS (via Homebrew or Xcode Command Line Tools)
brew install git
# or: xcode-select --install

# Ubuntu/Debian
sudo apt install git

# Windows
# Download from https://git-scm.com/download/win
# Or via Chocolatey: choco install git
```

## wget
### Description
wget is a command-line utility for downloading files from web servers via HTTP, HTTPS, and FTP protocols. It supports recursive downloads, resume interrupted downloads, bandwidth limiting, and background operations. Great for downloading files, mirroring websites, and automated retrieval tasks.

Try using `wget --help` for options.

### Installation
```bash
# macOS (via Homebrew)
brew install wget

# Ubuntu/Debian (usually pre-installed)
sudo apt install wget

# Windows (via Chocolatey)
choco install wget

# Or use built-in alternatives like curl or PowerShell
```

## rsync
### Description
rsync is a fast and versatile file synchronization and transfer tool. It efficiently copies and synchronizes files/directories locally or over networks, using delta-sync algorithm to transfer only changed portions. Perfect for backups, mirroring, and deployment tasks.

Try using `rsync --help` for options or `man rsync` for detailed documentation.

### Installation
```bash
# macOS (usually pre-installed, or via Homebrew)
brew install rsync

# Ubuntu/Debian (usually pre-installed)
sudo apt install rsync

# Windows (via WSL, Cygwin, or Chocolatey)
choco install rsync
```

## tree
### Description
tree displays directory structures in a tree-like format, making it easy to visualize file and folder hierarchies. Useful for documentation, understanding project structure, and creating directory listings with various filtering and formatting options.

Try using `tree --help` for options.

### Installation
```bash
# macOS (via Homebrew)
brew install tree

# Ubuntu/Debian
sudo apt install tree

# Windows (via Chocolatey)
choco install tree
```

## htop
### Description
htop is an interactive process viewer and system monitor that provides a colorful, user-friendly interface for monitoring system resources, processes, and performance metrics. It's an enhanced version of the traditional 'top' command with better visualization and interactivity.

Launch with `htop` and use F1 for help within the application.

### Installation
```bash
# macOS (via Homebrew)
brew install htop

# Ubuntu/Debian
sudo apt install htop

# Windows (via WSL or Chocolatey)
choco install htop
```

## ripgrep (rg)
### Description
ripgrep (rg) is an extremely fast text search tool that recursively searches directories for regex patterns. It's significantly faster than grep and includes smart filtering, supports various file types, and respects .gitignore files by default. Perfect for code searching and text analysis.

Try using `rg --help` for options.

### Installation
```bash
# macOS (via Homebrew)
brew install ripgrep

# Ubuntu/Debian
sudo apt install ripgrep

# Windows (via Chocolatey)
choco install ripgrep

# Or download from https://github.com/BurntSushi/ripgrep/releases
```

## fd
### Description
fd is a fast and user-friendly alternative to the traditional 'find' command. It provides intuitive syntax, colored output, parallel execution, and respects .gitignore files. Perfect for finding files and directories with pattern matching and various filtering options.

Try using `fd --help` for options.

### Installation
```bash
# macOS (via Homebrew)
brew install fd

# Ubuntu/Debian
sudo apt install fd-find
# Note: command is 'fdfind' on Ubuntu/Debian due to naming conflicts

# Windows (via Chocolatey)
choco install fd

# Or download from https://github.com/sharkdp/fd/releases
```

## sox
### Description
SoX (Sound eXchange) is a cross-platform command-line audio processing tool that can convert, filter, and analyze audio files. It's particularly useful for audio analysis tasks including generating statistics like RMS levels, peak amplitudes, frequency analysis, and applying various audio filters. Perfect for audio quality assessment, noise analysis, and extracting numerical audio metrics.

Try using `sox --help` for options or `sox -h` for basic help.

### Installation
```bash
# macOS (via Homebrew)
brew install sox

# Ubuntu/Debian
sudo apt install sox

# Windows (via Chocolatey)
choco install sox

# Or download from http://sox.sourceforge.net/
```

## replicate
### Description
Replicate CLI is a command-line interface for Replicate, a platform for running machine learning models in the cloud. It allows you to run AI models, create predictions, stream outputs, fine-tune models, and manage your Replicate account directly from the terminal. Perfect for integrating AI capabilities into workflows, automating model deployments, and rapid prototyping with various ML models.

Try using `replicate --help` for available commands or `replicate [command] --help` for specific command help.

### Installation
```bash
# macOS (via Homebrew)
brew tap replicate/tap
brew install replicate

# Set your API token (get from replicate.com/account)
export REPLICATE_API_TOKEN=<your-token-here>
```
globs:
alwaysApply: true
---
